{
  "openapi": "3.0.3",
  "info": {
    "title": "[API REST] Code Quiz Challenge: Test Your Programming Knowledge",
    "description": "Are you a coding enthusiast looking to put your skills to test? Don't look more! Our Code Quiz Challenge is designed to challenge your programming knowledge versus other players across various languages and concepts. Whether you,re a begginer or a seasoned developer looking for a fun way to brush up on your skills, this quiz is perfect for you.",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Github Repository",
    "url": "https://github.com/PabloAlanesDev/devathon-quiz-backend/"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/"
    }
  ],
  "tags": [
    {
      "name": "user"
    },
    {
      "name": "room"
    },
    {
      "name": "topic"
    },
    {
      "name": "quiz"
    }
  ],
  "paths": {
    "/topics": {
      "post": {
        "tags": [
          "topic"
        ],
        "summary": "Create a new topic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topic"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "topic"
        ],
        "summary": "Return list of topics",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Topic"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Topics was not found"
          }
        }
      }
    },
    "/topics/{topic_id}": {
      "get": {
        "tags": [
          "topic"
        ],
        "summary": "Return topic",
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "description": "topic id to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "topic"
        ],
        "summary": "Update topic",
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "description": "topic id to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "topic"
        ],
        "summary": "Delete topic",
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "description": "topic id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/quizzes": {
      "post": {
        "tags": [
          "quiz"
        ],
        "summary": "Create a new quiz",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuizCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quiz"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "quiz"
        ],
        "summary": "Return list of quizzes",
        "parameters": [
          {
            "name": "topic_id",
            "in": "query",
            "description": "filter quizzes by topic",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hidden_response_status",
            "in": "query",
            "description": "Hidden response status(correct/incorrect)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Quiz"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quizzes was not found"
          }
        }
      }
    },
    "/quizzes/{quiz_id}": {
      "get": {
        "tags": [
          "quiz"
        ],
        "summary": "Return Quiz",
        "parameters": [
          {
            "name": "quiz_id",
            "in": "path",
            "description": "quiz id to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quiz"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "quiz"
        ],
        "summary": "Update quiz",
        "parameters": [
          {
            "name": "quiz_id",
            "in": "path",
            "description": "quiz id to get info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "quiz"
        ],
        "summary": "Delete quiz",
        "parameters": [
          {
            "name": "quiz_id",
            "in": "path",
            "description": "quiz id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Return list of users",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Users was not found"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Return an user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id to get info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id to update partially",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/rooms": {
      "post": {
        "tags": [
          "room"
        ],
        "summary": "Create a new room",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "room"
        ],
        "summary": "Return list of rooms",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "started",
                "full",
                "empty"
              ]
            }
          },
          {
            "name": "with_quiz",
            "in": "query",
            "description": "Filter rooms with quiz assignment only",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Rooms was not found"
          }
        }
      }
    },
    "/rooms/{room_id}": {
      "get": {
        "tags": [
          "room"
        ],
        "summary": "Return a room",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "description": "room id to get info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "room"
        ],
        "summary": "Update room",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "description": "room id to update partially",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "room"
        ],
        "summary": "Delete room",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "description": "room id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "8144be4a2fe0"
          },
          "name": {
            "type": "string",
            "example": "pedro"
          },
          "room_id": {
            "type": "string",
            "example": "234567"
          },
          "score": {
            "type": "number",
            "default": 0,
            "format": "float",
            "example": 10.5
          },
          "status": {
            "type": "string",
            "default": "unknown",
            "enum": [
              "unknown",
              "connect",
              "disconnect"
            ]
          }
        }
      },
      "Room": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "455420"
          },
          "owner": {
            "type": "string",
            "example": "doggie"
          },
          "quiz_id": {
            "type": "string",
            "example": "8144be4a2fe0"
          },
          "quiz_count": {
            "type": "integer",
            "default": 5,
            "format": "int64",
            "example": 5
          },
          "status": {
            "type": "string",
            "default": "created",
            "enum": [
              "created",
              "started",
              "full",
              "empty"
            ]
          }
        }
      },
      "Topic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "4ac6075348f3"
          },
          "name": {
            "type": "string",
            "example": "Python"
          },
          "description": {
            "type": "string",
            "example": "Quiz about the Python"
          }
        }
      },
      "Quiz": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "34a60678998g4"
          },
          "question": {
            "type": "string",
            "example": "What is Python?"
          },
          "topic_id": {
            "type": "string",
            "example": "4ac6075348f3"
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response"
            }
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "467ff89f4578f6"
          },
          "text": {
            "type": "string",
            "example": "Python is a game"
          },
          "status": {
            "type": "string",
            "example": "incorrect",
            "enum": [
              "correct",
              "incorrect"
            ]
          }
        }
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "pedro"
          }
        }
      },
      "RoomCreate": {
        "required": [
          "owner"
        ],
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "example": "doggie"
          },
          "quiz_id": {
            "type": "string",
            "example": "8144be4a2fe0"
          },
          "quiz_count": {
            "type": "integer",
            "default": 5,
            "format": "int64",
            "example": 5
          }
        }
      },
      "TopicCreate": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Python"
          },
          "description": {
            "type": "string",
            "example": "Quiz about Python"
          }
        }
      },
      "QuizCreate": {
        "type": "object",
        "required": [
          "question",
          "topic_id"
        ],
        "properties": {
          "question": {
            "type": "string",
            "example": "What is Python?"
          },
          "topic_id": {
            "type": "string",
            "example": "e3433ede57935f"
          },
          "responses": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "text",
                "status"
              ],
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Python is a game"
                },
                "status": {
                  "type": "string",
                  "example": "incorrect",
                  "enum": [
                    "correct",
                    "incorrect"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}